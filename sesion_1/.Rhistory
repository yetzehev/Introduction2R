wget
knitr::opts_chunk$set(echo = TRUE)
# Cual es la clase de tb? vector o boleano
class(tb)
tb <- c(enchiladas, con.todo)
tb <- c(enchiladas, con.todo)
orden <- c(enchiladas, con.todo)
numerico <- 7460
print(numerico)
numerico <- 7460
print(numerico)
# Exploremos sus atributos
```{r}
is.vector(numerico)
length(numerico)
```
Por que la longitud de numerico es 1 si contiene tres digitos?
is.vector(numerico)
length(numerico)
is.vector(numerico)
length(numerico)
# Exploremos sus atributos
```{r}
is.vector(numerico)
length(numerico)
```
Por que la longitud de numerico es 1 si contiene tres digitos?
Podemos crear vectores de mas de un elemento con la funcion combinar = c(), o agregar nuevos elementos a un vector existente
```{r}
numerico <- c(numerico, 0707)
print(numerico)
length(numerico)
```
numerico <- c(numerico, 707)
print(numerico)
length(numerico)
enchiladas <- c("salsa","tortillas","pollo","queso","crema", "aguacate")
is.vector(enchiladas)
#Pero, de que clase
class(enchiladas)
print ("Enchiladas es un vector de tipo:", class(numerico))
print ("Enchiladas es un vector de tipo:", class(enchiladas))
print (paste0("Enchiladas es un vector de tipo:", class(enchiladas)))
print (paste0("Enchiladas es un vector de tipo:" , class(enchiladas)))
print (paste0("Enchiladas es un vector de tipo: ", class(enchiladas)))
print(enchiladas)
con.todo <- c(TRUE, TRUE, TRUE,TRUE, FALSE, FALSE)
class(con.todo)
print (paste0("con.todo es un vector de tipo: ", class(con.todo)))
orden <- c(enchiladas, con.todo)
menu <- c(enchiladas, numerico)
# Cual es la clase de tb? vector o boleano
class(tb)
# Cual es la clase de tb? vector o boleano
class(orden)
# Cual es la clase de tb? vector o boleano
class(orden)
class(cuenta)
cuenta <- c(enchiladas, numerico)
# Cual es la clase de tb? vector o boleano
class(orden)
class(cuenta)
#Vamos a echar un vistazo
head(orden)
#Vamos a echar un vistazo
View(orden)
View(precio)
View(cuenta)
cuenta
concha <- "nata" # Esta es una concha con nata del Cardenal
concha
peso <- 10
peso
sabor <- TRUE
matrix(1:3, nrow = 5, ncol = 5)
matrix(1:7, nrow = 5, ncol = 5)
matrix(data = 1:7, nrow = 5, ncol = 5)
matrix(data = 1:5, nrow = 5, ncol = 5)
matrix(data = 1:200, nrow = 5, ncol = 5)
matrix(data = 1:50, nrow = 5, ncol = 5)
matrix(data = 1:50, nrow = 10, ncol = 10)
matrix(data = 1:100, nrow = 10, ncol = 10)
lala <- matrix(data = 1:100, nrow = 10, ncol = 10)
View(lala)
matrix(data = 1:100, nrow = 10, ncol = 10)
# Podemos y lo ideal es que ASIGNEMOS la matriz a un objeto
kaputt <- matrix(data = 1:100, nrow = 10, ncol = 10)
extra <- seq(1:10)
extra
extra <- seq(500:510)
extra
kaputt <- c(kaputt, extra)
kaputt
class(kaputt)
# Podemos y lo ideal es que ASIGNEMOS la matriz a un objeto
kaputt <- matrix(data = 1:100, nrow = 10, ncol = 10)
extra <- seq(500:510)
kaputt <- kaputt extra)
kaputt <- fertig + matrix()
kaputt <- fertig + kaputt
fertig <- seq(500:510)
kaputt <- fertig + kaputt
dim(kaputt)
kaputt <- kaputt + fertig
View(kaputt)
class(kaputt)
fertig
fertig <- seq(501:510)
kaputt <- kaputt + fertig
class(kaputt)
View(kaputt)
# Podemos y lo ideal es que ASIGNEMOS la matriz a un objeto
kaputt <- matrix(data = 1:100, nrow = 10, ncol = 10)
dim(kaputt)
fertig <- seq(501:510)
kaputt <- kaputt + fertig
class(kaputt)
View(kaputt)
fertig
fertig <- seq(501:510)
fertig
fertig <- seq(10)
fertig
fertig <- seq(500)
fertig
fertig <- c(501:510)
fertig
kaputt <- kaputt + fertig
kaputt
# Podemos y lo ideal es que ASIGNEMOS la matriz a un objeto
kaputt <- matrix(data = 1:100, nrow = 10, ncol = 10)
dim(kaputt)
fertig <- c(501:510)
kaputt <- kaputt + fertig
class(kaputt)
View(kaputt)
kaputt <-c(kaputt,fertig)
View(kaputt)
class(kaputt)
View(kaputt)
kaputt
